#!/usr/bin/env bash
currentdir=$(pwd)
export RACKSPACE_FOLDER=${RACKSPACE_FOLDER:=$currentdir}
export RACKSPACE_USERNAME=${RACKSPACE_USERNAME:=""}
export RACKSPACE_APIKEY=${RACKSPACE_APIKEY:=""}
export RACKSPACE_CONTAINER=${RACKSPACE_CONTAINER:=""}

export RACKSPACE_URL=""
export RACKSPACE_TOKEN=""

function get_auth_packet() {
	curl -s -d \
	'{
	    "auth":
	    {
	       "RAX-KSKEY:apiKeyCredentials":
	       {  
	          "username": "'$RACKSPACE_USERNAME'",  
	          "apiKey": "'$RACKSPACE_APIKEY'"}
	    }  
	}' \
	-H 'Content-Type: application/json' \
	'https://identity.api.rackspacecloud.com/v2.0/tokens' | JSON.sh
}

function get_access_token() {
	get_auth_packet | egrep '\["access","token","id"*\]' | awk '{print $2}' | sed 's/"//g'
}

function get_files_endpoint() {
	get_auth_packet | egrep '\["access","serviceCatalog",1,"endpoints",0,"publicURL"*\]' | awk '{print $2}' | sed 's/\\\//\//g' | sed 's/"//g'
}

function login() {
	echo "fetching login details from rackspace:"
	access_token=$(get_access_token)
	files_endpoint=$(get_files_endpoint)
	echo $access_token
	echo $files_endpoint
}

function upload_file() {
	curl -X PUT -T $ii -H "X-Auth-Token: ae2bb8ae06ed48f992b13cf185fc0d6e" "https://storage101.lon3.clouddrive.com/v1/MossoCloudFS_39a3ae15-8942-4307-a23c-79f681874d36/legacy_files/$ii";
}

function upload_folder() {
	for ii in `find ./ -type f -name '*'|cut -b 3-|grep -v -P '^$'`; do
		upload_file $ii
		if [[ ! -d /root/uploaded/$ii ]]; then
			curl -X PUT -T $ii -H "X-Auth-Token: ae2bb8ae06ed48f992b13cf185fc0d6e" "https://storage101.lon3.clouddrive.com/v1/MossoCloudFS_39a3ae15-8942-4307-a23c-79f681874d36/legacy_files/$ii";
			echo $ii
			mkdir -p /root/uploaded/$ii
		fi
	done

}

function show_help() {
	cat <<EOF
Usage: $0 [options]

-h|--help             show this help text
                     
-f|--folder           path to a local folder to upload
-u|--username         the rackspace username
-a|--apikey           the rackspace apikey
-c|--container        the rackspace container

Environment Variables:

RACKSPACE_FOLDER -> --folder
RACKSPACE_USERNAME -> --user
RACKSPACE_APIKEY -> --apikey
RACKSPACE_CONTAINER -> --container
EOF
}

for i in "$@"
do
case $i in
		-f=*|--folder=*)
    export RACKSPACE_FOLDER="${i#*=}"
    ;;
    -u=*|--username=*)
    export RACKSPACE_USERNAME="${i#*=}"
    ;;
    -a=*|--apikey=*)
    export RACKSPACE_APIKEY="${i#*=}"
    ;;
    -c=*|--container=*)
    export RACKSPACE_CONTAINER="${i#*=}"
    ;;
    -h|--help)
    show_help
    exit
    ;;
    #--default)
    #DEFAULT=YES
    #;;
    *)
            # unknown option
    ;;
esac
done

if [[ -z $RACKSPACE_FOLDER ]]; then
	echo "RACKSPACE_FOLDER | -f | --folder needed"
	exit 1
fi

if [[ -z $RACKSPACE_USERNAME ]]; then
	echo "RACKSPACE_USERNAME | -u | --username needed"
	exit 1
fi

if [[ -z $RACKSPACE_APIKEY ]]; then
	echo "RACKSPACE_APIKEY | -a | --apikey needed"
	exit 1
fi

if [[ -z $RACKSPACE_CONTAINER ]]; then
	echo "RACKSPACE_CONTAINER | -c | --container needed"
	exit 1
fi

if [[ ! -d $RACKSPACE_FOLDER ]]; then
	echo "the folder: $RACKSPACE_FOLDER does not exist"
	exit 1
fi

login